{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, PROFILE_ERROR, UPDATE_PROFILE, ACCOUNT_DELETED, CLEAR_PROFILE } from './types';\nimport { setAlert } from './alert'; // Get Current Users Profile \n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create or Update Profile \n\nexport const createAndUpdateProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit === true ? 'Profile Updated Successfully ...' : 'Profile Created Successfully ...', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const erros = err.response.data.erros;\n\n    if (erros) {\n      erros.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Experience \n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added Successfully ...', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.erros;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add Education\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added Successfully ...', 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.erros;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Delete Successfully ...'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Delete Successfully ...'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete Account and Profile \n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? This can NOT be undone ....')) {\n    try {\n      const res = await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: ACCOUNT_DELETED\n      });\n      dispatch(setAlert('Your account has been permanantly deleted ...'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DEVCONNECTOR/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","PROFILE_ERROR","UPDATE_PROFILE","ACCOUNT_DELETED","CLEAR_PROFILE","setAlert","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createAndUpdateProfile","formData","history","edit","config","headers","post","push","erros","forEach","error","addExperience","put","errors","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  GET_PROFILE, \r\n  PROFILE_ERROR, \r\n  UPDATE_PROFILE, \r\n  ACCOUNT_DELETED, \r\n  CLEAR_PROFILE} from './types';\r\nimport {setAlert} from './alert'\r\n\r\n// Get Current Users Profile \r\n\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n      const res = await axios.get('api/profile/me');\r\n  \r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { \r\n          msg: err.response.statusText, \r\n          status: err.response.status\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n // Create or Update Profile \r\n \r\n export const createAndUpdateProfile = (formData, history, edit = false) => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert( edit === true ? 'Profile Updated Successfully ...' : 'Profile Created Successfully ...', 'success'));\r\n\r\n    if(!edit){\r\n      history.push('/dashboard');\r\n    }\r\n    \r\n  } catch (err) {\r\n\r\n    const erros = err.response.data.erros\r\n\r\n    if(erros){\r\n      erros.forEach(error => \r\n        dispatch(setAlert(error.msg, 'danger'))  \r\n      );\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { \r\n        msg: err.response.statusText, \r\n        status: err.response.status\r\n      }\r\n    });\r\n  }\r\n }\r\n\r\n // Add Experience \r\n\r\n export const addExperience = (formData, history) => async dispatch => {\r\n\r\n  try {\r\n    const config ={\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n    \r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\r\n      'Experience Added Successfully ...',\r\n      'success'\r\n    ));\r\n\r\n    history.push('/dashboard');\r\n\r\n  } catch (err) {\r\n    \r\n    const errors = err.response.data.erros;\r\n\r\n    if(errors){\r\n      errors.forEach( error => \r\n        dispatch(setAlert(error.msg, 'danger'))\r\n        );\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status\r\n      }\r\n    });\r\n  }\r\n }\r\n\r\n // Add Education\r\n\r\n export const addEducation = (formData, history) => async dispatch => {\r\n   try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n    \r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert(\r\n      'Education Added Successfully ...',\r\n      'success'\r\n    ));\r\n\r\n    history.push('/dashboard');\r\n\r\n   } catch (err) {\r\n     const errors = err.response.data.erros;\r\n\r\n     if(errors){\r\n      errors.forEach( error => \r\n        dispatch(setAlert(\r\n          error.msg,\r\n          'danger'\r\n        )));\r\n     }\r\n\r\n     dispatch({\r\n       type: PROFILE_ERROR,\r\n       payload: {\r\n         msg: err.response.statusText,\r\n         status: err.response.status\r\n       }\r\n     });\r\n   }\r\n }\r\n\r\n// Delete Experience\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Experience Delete Successfully ...'));\r\n    \r\n  } catch (err) {\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload:{\r\n        msg: err.response.statusText,\r\n        status: err.response.status\r\n      }\r\n    }); \r\n  }\r\n}\r\n\r\n// Delete Education\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n  try {\r\n    const res = await axios.delete(`api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data\r\n    });\r\n\r\n    dispatch(setAlert('Education Delete Successfully ...'));\r\n    \r\n  } catch (err) {\r\n    \r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: {\r\n        msg: err.response.statusText,\r\n        status: err.response.status\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Delete Account and Profile \r\nexport const deleteAccount = () => async dispatch => {\r\n  if(window.confirm('Are you sure? This can NOT be undone ....')){\r\n    try {\r\n\r\n    const res = await axios.delete('/api/profile');\r\n\r\n    dispatch({\r\n      type: CLEAR_PROFILE\r\n    });\r\n\r\n    dispatch({\r\n      type: ACCOUNT_DELETED\r\n    });\r\n\r\n    dispatch(setAlert('Your account has been permanantly deleted ...'));\r\n      \r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: {\r\n          msg: err.response.statusText,\r\n          status: err.response.status\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}