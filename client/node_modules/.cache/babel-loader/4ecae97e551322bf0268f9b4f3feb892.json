{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\DEVCONNECTOR\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = (props, ...rest) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => !props.isAuthenticated && !props.loading ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 6\n  }, this) : /*#__PURE__*/_jsxDEV(props.component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 6\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {})(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/DEVCONNECTOR/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","props","rest","isAuthenticated","loading","propTypes","bool","mapStateToProps","state","auth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAA+B,kBAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQ,GAAGC,IAAX,kBACnB,QAAC,KAAD,OACMA,IADN;AAEE,EAAA,MAAM,EAAGD,KAAK,IAAI,CAACA,KAAK,CAACE,eAAP,IAA0B,CAACF,KAAK,CAACG,OAAjC,gBACjB,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADiB,gBAGjB,QAAC,KAAD,CAAO,SAAP,OAAqBH;AAArB;AAAA;AAAA;AAAA;AAAA;AALH;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,Y;AAWNA,YAAY,CAACK,SAAb,GAAyB;AACvBF,EAAAA,eAAe,EAAEJ,SAAS,CAACO,IADJ;AAEvBF,EAAAA,OAAO,EAAEL,SAAS,CAACO;AAFI,CAAzB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,eAAe,EAAEK,KAAK,CAACC,IAAN,CAAWN,eADI;AAEhCC,EAAAA,OAAO,EAAEI,KAAK,CAACC,IAAN,CAAWL;AAFY,CAAL,CAA7B;;AAKA,eAAeN,OAAO,CAACS,eAAD,EAAkB,EAAlB,CAAP,CAA8BP,YAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = (props, ...rest) => (\r\n  <Route \r\n    {...rest} \r\n    render={ props => !props.isAuthenticated && !props.loading ? \r\n    (<Redirect to='/login' />)\r\n    :\r\n    (<props.component {...props}/>) \r\n    }\r\n  />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  loading: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps, {} )(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}